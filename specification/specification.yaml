openapi: 3.0.3
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: users
    description: Действия с пользователем.
  - name: offers
    description: Действия с предложениями об аренде.
  - name: comments
    description: Действия с комментариями.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя

      requestBody:
        description: Информация для создания нового пользователя
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Ошибка валидации данных
        "409":
          description: Пользователь с таким email уже существует

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация авторизации пользователя
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUser"
        required: true

      responses:
        "200":
          description: Пользователь авторизован. Объект пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Ошибка валидации данных
        "401":
          description: Неверные данные для авторизации

  /users/logout:
    post:
      tags:
        - users
      summary: Завершение сессии пользователя

      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      responses:
        "204":
          description: Сессия завершена
        "401":
          description: Данный пользователь не авторизован

  /users/status:
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

      parameters:
        - name: Authorization
          description: Токен авторизации
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      responses:
        "200":
          description: Пользователь авторизован. Токен валидный
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "401":
          description: Пользователь не авторизован. Токен не валидный

  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения об аренде

      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      requestBody:
        description: Информация для создания нового предложения
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOffer"
        required: true

      responses:
        "201":
          description: Новое предложение успешно создано. Объект предложения
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offer"
        "400":
          description: Ошибка валидации данных
        "401":
          description: Пользователь не авторизован

    get:
      tags:
        - offers
      summary: Получение списка предложений об аренде

      parameters:
        - name: amount
          in: query
          description: Количество предложений в списке. По умолчанию 60.
          schema:
            type: number
            default: 60
            example: 100

      responses:
        "200":
          description: Список предложения получен.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/offerPreview"

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение детальной информации о предложении

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 132

      responses:
        "200":
          description: Детальная информация о предложении
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offer"
        "404":
          description: Предложение не найдено

    patch:
      tags:
        - offers
      summary: Редактирование предложения.

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 132
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      requestBody:
        description: Информация для редактирования предложения
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOffer"
        required: true

      responses:
        "200":
          description: Предложение успешно отредактировано. Объект предложения
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offer"
        "400":
          description: Ошибка валидации данных
        "401":
          description: Пользователь не авторизован
        "403":
          description: У пользователя нет доступа к редактированию предложения
        "404":
          description: Предложение не найдено

    delete:
      tags:
        - offers
      summary: Удаление предложения.

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 132
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      responses:
        "204":
          description: Предложение успешно удалено
        "401":
          description: Пользователь не авторизован
        "403":
          description: У пользователя нет доступа к удалению предложения
        "404":
          description: Предложение не найдено

  /offers/premium:
    get:
      tags:
        - offers
      summary: Получение списка премиальных предложений для города

      parameters:
        - name: city
          in: query
          description: Название города
          required: true
          schema:
            allOf:
              - $ref: "#/components/schemas/baseOffer/properties/city"

      responses:
        "200":
          description: Список премиальных предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/offerPreview"

  /offers/favorites:
    get:
      tags:
        - offers
      summary: Получения списка предложений, добавленных в избранное

      responses:
        "200":
          description: Список избранных предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/offerPreview"
        "401":
          description: Пользователь не авторизован

  /offers/{offerId}/favorite:
    post:
      tags:
        - offers
      summary: Добавление предложения в избранное

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 132
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      responses:
        "200":
          description: Предложение добавлено в избранное
        "401":
          description: Пользователь не авторизован
        "404":
          description: Предложение не найдено

    delete:
      tags:
        - offers
      summary: Удаление предложения из избранного

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 132
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      responses:
        "204":
          description: Предложение удалено из избранного
        "401":
          description: Пользователь не авторизован
        "404":
          description: Предложение не найдено


  /offers/{offerId}/comments:
    get:
      tags:
        - comments
      summary: Получение списка комментариев для предложения

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 132

      responses:
        "200":
          description: Список комментариев
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/comment"
        "404":
          description: Предложение не найдено


    post:
      tags:
        - comments
      summary: Добавление комментария для предложения

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 132
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: eufneh34fh93hf9hdjfdu3hf93hedf.3f9374gf7w.fu394gf87er

      requestBody:
        description: Информация для создания комментария
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/commentCreate"
        required: true

      responses:
        "200":
          description: Комментарий создан. Объект комментария
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/comment"
        "400":
          description: Ошибка валидации данных
        "401":
          description: Пользователь не авторизован
        "404":
          description: Предложение не найдено

components:
  schemas:
    baseUser:
      type: object
      properties:
        name:
          type: string
          example: John
        email:
          type: string
          example: john@john.com
        avatar:
          type: string
          example: johnny.jpg
        userType:
          type: string
          enum:
            - обычный
            - pro
          example: Pro

    user:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseUser"
      properties:
        id:
          type: number
          example: 1

    createUser:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseUser"
      properties:
        password:
          type: string
          example: 12345654321
      required:
        - name
        - email
        - password
        - userType

    loginUser:
      type: object
      properties:
        email:
          type: string
          example: john@john.com
        password:
          type: string
          example: 12345654321
      required:
        - email
        - password

    baseOffer:
      type: object
      properties:
        title:
          type: string
          example: Test Hotel
        city:
          type: string
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf
          example: Dusseldorf
        previewImage:
          type: string
          example: images/hotel1.jpg
        isPremium:
          type: boolean
          example: false
        isFavorite:
          type: boolean
          example: true
        propertyType:
          type: string
          enum:
            - apartment
            - house
            - room
            - hotel
          example: hotel
        price:
          type: number
          example: 1000

    offer:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOffer"
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        description:
            type: string
            example: Test Hotel in Dusseldorf is a cozy hotel with stunning views of the city.
        createdDate:
          type: string
          example: 2024-02-12T12:12:12.121Z
        images:
          type: array
          items:
            type: string
          example:
            ["http://images.com/hotel/1/1.jpg", "http://images.com/hotel/1/2.jpg", "http://images.com/hotel/1/3.jpg"]
        rating:
          type: number
          example: 4.2
        roomsNumber:
          type: number
          example: 3
        guestsNumber:
          type: number
          example: 5
        facilities:
          type: array
          items:
            type: string
            enum:
              - Breakfast
              - Air conditioning
              - Laptop friendly workspace
              - Baby seat
              - Washer
              - Towels
              - Fridge
          example: ["Breakfast", "Air conditioning"]
        author:
          $ref: "#/components/schemas/user"
        commentsCount:
          type: number
          example: 13
        coordinates:
          $ref: "#/components/schemas/coordinates"

    createOffer:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOffer"
      properties:
        description:
          type: string
          example: Test Hotel in Dusseldorf is a cozy hotel with stunning views of the city.
        images:
          type: array
          items:
            type: string
          example:
            ["http://images.com/hotel/1/1.jpg", "http://images.com/hotel/1/2.jpg", "http://images.com/hotel/1/3.jpg"]
        roomsNumber:
          type: number
          example: 3
        guestsNumber:
          type: number
          example: 5
        coordinates:
          $ref: "#/components/schemas/coordinates"
      required:
        - title
        - description
        - city
        - previewImage
        - images
        - isPremium
        - isFavorite
        - propertyType
        - roomsNumber
        - guestsNumber
        - price
        - facilities
        - author
        - coordinates

    offerPreview:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        rating:
          type: number
          example: 4.2
        commentsCount:
          type: number
          example: 13

    coordinates:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOffer"
      properties:
        latitude:
          type: number
          example: 51.225402
        longitude:
          type: number
          example: 6.776314

    baseComment:
      type: object
      properties:
        text:
          type: string
          example: Nice hotel with a view of the city.
        createdDate:
          type: string
          example: 2024-01-12T12:26:04.232Z
          readOnly: true
        rating:
          type: number
          minimum: 1
          maximum: 5
          example: 3.5
        author:
          $ref: "#/components/schemas/user"

    comment:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseComment"
      properties:
        id:
          type: number
          example: 1
          readOnly: true

    commentCreate:
      type: object
      properties:
        text:
          type: string
          example: Nice hotel with a view of the city.
        rating:
          type: number
          minimum: 1
          maximum: 5
          example: 3.5
      required:
        - text
        - rating
